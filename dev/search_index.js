var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TextClassification","category":"page"},{"location":"#TextClassification","page":"Home","title":"TextClassification","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TextClassification]","category":"page"},{"location":"#TextClassification.MicroTC-Tuple{MicroTC_Config,AbstractArray{T,1} where T,CategoricalArrays.CategoricalArray}","page":"Home","title":"TextClassification.MicroTC","text":"MicroTC(config::MicroTC_Config, train_corpus::AbstractVector, train_y::CategoricalArray; verbose=true)\nMicroTC(config::MicroTC_Config, textmodel::TextModel, train_X::AbstractVector{S}, train_y::CategoricalArray; verbose=true) where {S<:SVEC}\n\nCreates a MicroTC model on the given dataset and configuration\n\n\n\n\n\n","category":"method"},{"location":"#StatsBase.predict-Tuple{MicroTC,Any}","page":"Home","title":"StatsBase.predict","text":"predict(tc::MicroTC, text)\npredict(tc::MicroTC, vec::SVEC)\n\nPredicts the label of the given input\n\n\n\n\n\n","category":"method"},{"location":"#TextClassification.create_textmodel-Tuple{MicroTC_Config,AbstractArray{Dict{Symbol,Int64},1},CategoricalArrays.CategoricalArray}","page":"Home","title":"TextClassification.create_textmodel","text":"create_textmodel(config::MicroTC_Config, train_X::AbstractVector{BOW}, train_y::CategoricalArray)\n\nCreates a text model based on the dataset and the given configuration\n\n\n\n\n\n","category":"method"},{"location":"#TextSearch.vectorize-Tuple{MicroTC,Any}","page":"Home","title":"TextSearch.vectorize","text":"vectorize(tc::MicroTC, text)\nvectorize(tc::MicroTC, bow::BOW)\n\nCreates a weighted vector using the model. The input text can be a string or an array of strings; it also can be an already computed bag of words.\n\n\n\n\n\n","category":"method"}]
}
